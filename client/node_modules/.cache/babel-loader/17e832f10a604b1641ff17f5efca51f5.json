{"ast":null,"code":"import React from'react';import{Drawer,Avatar}from'@material-ui/core';import avatar from'../../assets/image-avatar.jpg';import iconMoon from\"../../assets/icon-moon.svg\";import iconSun from\"../../assets/icon-sun.svg\";import logo from\"../../assets/logo.svg\";import{switchTheme}from'../../actions/genralState';import{useDispatch,useSelector}from'react-redux';import useStyles from'./styles';import useMediaQuery from'@material-ui/core/useMediaQuery';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PermanentDrawerLeft=function PermanentDrawerLeft(){var classes=useStyles();var lgScreen=useMediaQuery('(min-width:960px)');var dispatch=useDispatch();var isDarkMode=useSelector(function(state){return state.GlobalState.isDarkMode;});var toggleMode=function toggleMode(){dispatch(switchTheme());};return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:lgScreen&&/*#__PURE__*/_jsxs(Drawer,{className:classes.drawer,variant:\"permanent\",classes:{paper:classes.drawerPaper},anchor:\"left\",children:[/*#__PURE__*/_jsx(\"div\",{className:classes.logoDiv,children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\",className:classes.logo})}),/*#__PURE__*/_jsx(\"img\",{src:isDarkMode?iconSun:iconMoon,alt:\"moon\",className:classes.icons,onClick:function onClick(){return toggleMode();}}),/*#__PURE__*/_jsx(Avatar,{src:avatar,alt:\"avatar\",className:classes.avatar})]})});};export default PermanentDrawerLeft;","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Drawer/PermanentDraweLeft.js"],"names":["React","Drawer","Avatar","avatar","switchTheme","useDispatch","useSelector","useStyles","useMediaQuery","PermanentDrawerLeft","classes","lgScreen","dispatch","isDarkMode","state","GlobalState","toggleMode","root","drawer","paper","drawerPaper","logoDiv","logo","iconSun","iconMoon","icons"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,mBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,+BAAnB,C,wIAIA,OAASC,WAAT,KAA4B,2BAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,C,wFAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,GAAMI,CAAAA,QAAQ,CAAGH,aAAa,CAAC,mBAAD,CAA9B,CACA,GAAMI,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,UAAU,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAN,CAAkBF,UAA7B,EAAD,CAA9B,CAEA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBJ,QAAQ,CAACR,WAAW,EAAZ,CAAR,CACD,CAFD,CAIA,mBACE,YAAK,SAAS,CAAEM,OAAO,CAACO,IAAxB,UACGN,QAAQ,eACP,MAAC,MAAD,EACE,SAAS,CAAED,OAAO,CAACQ,MADrB,CAEE,OAAO,CAAC,WAFV,CAGE,OAAO,CAAE,CACPC,KAAK,CAAET,OAAO,CAACU,WADR,CAHX,CAME,MAAM,CAAC,MANT,wBAQE,YAAK,SAAS,CAAEV,OAAO,CAACW,OAAxB,uBACE,YAAK,GAAG,CAAEC,IAAV,CAAgB,GAAG,CAAC,MAApB,CAA2B,SAAS,CAAEZ,OAAO,CAACY,IAA9C,EADF,EARF,cAYE,YACE,GAAG,CAAET,UAAU,CAAGU,OAAH,CAAaC,QAD9B,CAEE,GAAG,CAAC,MAFN,CAGE,SAAS,CAAEd,OAAO,CAACe,KAHrB,CAIE,OAAO,CAAE,yBAAMT,CAAAA,UAAU,EAAhB,EAJX,EAZF,cAmBE,KAAC,MAAD,EAAQ,GAAG,CAAEb,MAAb,CAAqB,GAAG,CAAC,QAAzB,CAAkC,SAAS,CAAEO,OAAO,CAACP,MAArD,EAnBF,GAFJ,EADF,CA2BD,CArCD,CAuCA,cAAeM,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport { Drawer, Avatar } from '@material-ui/core';\nimport avatar from '../../assets/image-avatar.jpg';\nimport iconMoon from '../../assets/icon-moon.svg';\nimport iconSun from '../../assets/icon-sun.svg';\nimport logo from '../../assets/logo.svg';\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst PermanentDrawerLeft = () => {\n  const classes = useStyles();\n  const lgScreen = useMediaQuery('(min-width:960px)');\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector((state) => state.GlobalState.isDarkMode);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  return (\n    <div className={classes.root}>\n      {lgScreen && (\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.logoDiv}>\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n          </div>\n\n          <img\n            src={isDarkMode ? iconSun : iconMoon}\n            alt=\"moon\"\n            className={classes.icons}\n            onClick={() => toggleMode()}\n          />\n\n          <Avatar src={avatar} alt=\"avatar\" className={classes.avatar} />\n        </Drawer>\n      )}\n    </div>\n  );\n};\n\nexport default PermanentDrawerLeft;\n"]},"metadata":{},"sourceType":"module"}