{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Drawer/PermanentDraweLeft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Avatar from '@material-ui/core/Avatar';\nimport useStyles from './styles';\nimport avatar from '../../assets/image-avatar.jpg';\nimport iconMoon from \"../../assets/icon-moon.svg\";\nimport iconSun from \"../../assets/icon-sun.svg\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport logo from \"../../assets/logo.svg\";\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PermanentDrawerLeft = () => {\n  _s();\n\n  const classes = useStyles();\n  const lgScreen = useMediaQuery('(min-width:960px)');\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector(state => state.GlobalState.isDarkMode);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: lgScreen && /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      anchor: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoDiv,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isDarkMode ? iconSun : iconMoon,\n        alt: \"moon\",\n        className: classes.icons,\n        onClick: () => toggleMode()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: \"avatar\",\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PermanentDrawerLeft, \"h+EYVlCl2d2tPZn4/eF4V5fOBXE=\", false, function () {\n  return [useStyles, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = PermanentDrawerLeft;\nexport default PermanentDrawerLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermanentDrawerLeft\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Drawer/PermanentDraweLeft.js"],"names":["React","Drawer","Avatar","useStyles","avatar","useMediaQuery","switchTheme","useDispatch","useSelector","PermanentDrawerLeft","classes","lgScreen","dispatch","isDarkMode","state","GlobalState","toggleMode","root","drawer","paper","drawerPaper","logoDiv","logo","iconSun","iconMoon","icons"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;;AAGA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,QAAQ,GAAGN,aAAa,CAAC,mBAAD,CAA9B;AACA,QAAMO,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,UAAU,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,UAA9B,CAA9B;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvBJ,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACO,IAAxB;AAAA,cACGN,QAAQ,iBACP,QAAC,MAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACQ,MADrB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAET,OAAO,CAACU;AADR,OAHX;AAME,MAAA,MAAM,EAAC,MANT;AAAA,8BAQE;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACW,OAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAEZ,OAAO,CAACY;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAYE;AACE,QAAA,GAAG,EAAET,UAAU,GAAGU,OAAH,GAAaC,QAD9B;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,SAAS,EAAEd,OAAO,CAACe,KAHrB;AAIE,QAAA,OAAO,EAAE,MAAMT,UAAU;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAZF,eAmBE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEZ,MAAb;AAAqB,QAAA,GAAG,EAAC,QAAzB;AAAkC,QAAA,SAAS,EAAEM,OAAO,CAACN;AAArD;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArCD;;GAAMK,mB;UACYN,S,EACCE,a,EACAE,W,EACEC,W;;;KAJfC,mB;AAuCN,eAAeA,mBAAf","sourcesContent":["import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Avatar from '@material-ui/core/Avatar';\nimport useStyles from './styles';\nimport avatar from '../../assets/image-avatar.jpg';\nimport iconMoon from '../../assets/icon-moon.svg';\nimport iconSun from '../../assets/icon-sun.svg';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport logo from '../../assets/logo.svg';\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst PermanentDrawerLeft = () => {\n  const classes = useStyles();\n  const lgScreen = useMediaQuery('(min-width:960px)');\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector((state) => state.GlobalState.isDarkMode);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  return (\n    <div className={classes.root}>\n      {lgScreen && (\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.logoDiv}>\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n          </div>\n\n          <img\n            src={isDarkMode ? iconSun : iconMoon}\n            alt=\"moon\"\n            className={classes.icons}\n            onClick={() => toggleMode()}\n          />\n\n          <Avatar src={avatar} alt=\"avatar\" className={classes.avatar} />\n        </Drawer>\n      )}\n    </div>\n  );\n};\n\nexport default PermanentDrawerLeft;\n"]},"metadata":{},"sourceType":"module"}