{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FormField from './FormField/FormField';\nimport ItemsList from './ItemsList/ItemsList';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/genralState';\nimport { getTotal, getDueDate } from '../../helpers';\nimport { Container, Typography, MenuItem, Button, Paper, Modal } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from './styles';\nimport { ValidatorForm, SelectValidator } from 'react-material-ui-form-validator';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector(state => state.GlobalState.showForm);\n  const currentId = useSelector(state => state.GlobalState.currentId);\n  const invoice = useSelector(state => currentId ? state.Invoices.invoices.find(invoice => invoice._id === currentId) : null);\n  const [invoiceData, setInvocieData] = useState(data);\n\n  const addItemField = () => {\n    setInvocieData({ ...invoiceData,\n      items: [...invoiceData.items, {\n        name: '',\n        quantity: 0,\n        price: 0,\n        total: 0,\n        id: uuidv4()\n      }]\n    });\n  };\n\n  const onDeleteItem = id => {\n    const newItems = invoiceData.items.filter(item => item.id !== id);\n    setInvocieData({ ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems)\n    });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n    const newItems = invoiceData.items.map((item, idx) => idx === invoiceData.items.indexOf(i) ? inputName === 'name' ? { ...item,\n      name: value\n    } : { ...item,\n      [inputName]: Number(value),\n      total: inputName === 'price' ? value * item.quantity : value * item.price\n    } : item);\n    setInvocieData({ ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems)\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n    if (!currentId) clear(); // eslint-disable-next-line\n  }, [currentId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: showForm === undefined ? false : showForm,\n    onClose: () => dispatch(toggleFormShow()),\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\" // style={{ display: showForm ? 'block' : 'none' }}\n    ,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: currentId ? `Edit #${currentId.slice(18)}` : 'New Invoice'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.heading,\n              color: \"primary\",\n              children: \"Bill From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"senderAddress\",\n              value: invoiceData.senderAddress.street,\n              onChange: e => setInvocieData({ ...invoiceData,\n                senderAddress: { ...invoiceData.senderAddress,\n                  street: e.target.value\n                }\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderCity\",\n                  value: invoiceData.senderAddress.city,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      city: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Post Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderPostCode\",\n                  value: invoiceData.senderAddress.postCode,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      postCode: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderCountry\",\n                  value: invoiceData.senderAddress.country,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      country: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.heading,\n              color: \"primary\",\n              children: \"Bill to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Client's Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientName\",\n              value: invoiceData.clientName,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Client's Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientEmail\",\n              value: invoiceData.clientEmail,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientEmail: e.target.value\n              }),\n              validators: ['required', 'isEmail'],\n              errorMessages: [\"can't be empty\", 'email is invalid']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientStreet\",\n              value: invoiceData.clientAddress.street,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientAddress: { ...invoiceData.clientAddress,\n                  street: e.target.value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientCity\",\n                  value: invoiceData.clientAddress.city,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      city: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Post Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientPostCode\",\n                  value: invoiceData.clientAddress.postCode,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      postCode: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientCountry\",\n                  value: invoiceData.clientAddress.country,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      country: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Invoice Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"createdAt\",\n                  type: \"date\",\n                  value: invoiceData.createdAt,\n                  fullWidth: true,\n                  onChange: e => {\n                    setInvocieData({ ...invoiceData,\n                      createdAt: e.target.value,\n                      paymentDue: invoiceData.paymentTerms ? getDueDate(e.target.value, invoiceData.paymentTerms) : ''\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Payment terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                    name: \"paymentTerms\",\n                    value: invoiceData.paymentTerms,\n                    validators: ['required'],\n                    errorMessages: [\"can't be empty\"],\n                    onChange: e => {\n                      setInvocieData({ ...invoiceData,\n                        paymentTerms: e.target.value,\n                        paymentDue: invoiceData.createdAt ? getDueDate(invoiceData.createdAt, e.target.value) : ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: '',\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        children: \"None\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 30,\n                      children: \"Next 30 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 14,\n                      children: \"Next 14 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 7,\n                      children: \"Next 7 day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 1,\n                      children: \"Next 1 day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"description\",\n              value: invoiceData.description,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), invoiceData.items.length > 0 && /*#__PURE__*/_jsxDEV(ItemsList, {\n              items: invoiceData.items,\n              handleChangeItem: handleChangeItemValue,\n              deleteItem: onDeleteItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            className: classes.btnList,\n            onClick: addItemField,\n            children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), \"Add New Item\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.btnGroup,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => dispatch(toggleFormShow()),\n              className: classes.btn,\n              children: currentId ? 'Cancel' : 'Discard'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.btnRight,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  display: currentId ? 'none' : 'inline'\n                },\n                className: classes.btn,\n                variant: \"outlined\",\n                type: \"submit\",\n                onClick: () => setInvocieData({ ...invoiceData,\n                  status: 'draft'\n                }),\n                children: \"Save As Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.btn,\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                children: currentId ? 'Save Changes' : 'Save & Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"yXs6eEQiHW6wRXjYlcx+FVt7wzQ=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","FormField","ItemsList","createInvoice","updateInvoice","useDispatch","useSelector","toggleFormShow","handleCurrentId","getTotal","getDueDate","Container","Typography","MenuItem","Button","Paper","Modal","useHistory","AddIcon","useStyles","ValidatorForm","SelectValidator","v4","uuidv4","Form","classes","history","dispatch","showForm","state","GlobalState","currentId","invoice","Invoices","invoices","find","_id","invoiceData","setInvocieData","data","addItemField","items","name","quantity","price","total","id","onDeleteItem","newItems","filter","item","handleChangeItemValue","e","i","inputName","target","value","map","idx","indexOf","Number","clear","onSubmit","preventDefault","push","undefined","root","formContainer","paper","slice","heading","label","senderAddress","street","flex","space","city","postCode","country","clientName","clientEmail","clientAddress","createdAt","paymentDue","paymentTerms","description","length","btnList","btnGroup","btn","btnRight","display","status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormField from './FormField/FormField';\nimport ItemsList from './ItemsList/ItemsList';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/genralState';\nimport { getTotal, getDueDate } from '../../helpers';\nimport {\n  Container,\n  Typography,\n  MenuItem,\n  Button,\n  Paper,\n  Modal,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from './styles';\nimport {\n  ValidatorForm,\n  SelectValidator,\n} from 'react-material-ui-form-validator';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Form = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector((state) => state.GlobalState.showForm);\n  const currentId = useSelector((state) => state.GlobalState.currentId);\n  const invoice = useSelector((state) =>\n    currentId\n      ? state.Invoices.invoices.find((invoice) => invoice._id === currentId)\n      : null\n  );\n\n  const [invoiceData, setInvocieData] = useState(data);\n\n  const addItemField = () => {\n    setInvocieData({\n      ...invoiceData,\n      items: [\n        ...invoiceData.items,\n        {\n          name: '',\n          quantity: 0,\n          price: 0,\n          total: 0,\n          id: uuidv4(),\n        },\n      ],\n    });\n  };\n\n  const onDeleteItem = (id) => {\n    const newItems = invoiceData.items.filter((item) => item.id !== id);\n    setInvocieData({\n      ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems),\n    });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n\n    const newItems = invoiceData.items.map((item, idx) =>\n      idx === invoiceData.items.indexOf(i)\n        ? inputName === 'name'\n          ? { ...item, name: value }\n          : {\n              ...item,\n              [inputName]: Number(value),\n              total:\n                inputName === 'price'\n                  ? value * item.quantity\n                  : value * item.price,\n            }\n        : item\n    );\n\n    setInvocieData({\n      ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems),\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n\n    if (!currentId) clear();\n\n    // eslint-disable-next-line\n  }, [currentId]);\n  return (\n    <Modal\n      open={showForm === undefined ? false : showForm}\n      onClose={() => dispatch(toggleFormShow())}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      // style={{ display: showForm ? 'block' : 'none' }}\n      className={classes.root}\n    >\n      <Container className={classes.formContainer}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\">\n            {currentId ? `Edit #${currentId.slice(18)}` : 'New Invoice'}\n          </Typography>\n\n          <ValidatorForm onSubmit={onSubmit}>\n            <div>\n              <Typography\n                variant=\"h5\"\n                className={classes.heading}\n                color=\"primary\"\n              >\n                Bill From\n              </Typography>\n              <div className={classes.label}>Street Address</div>\n\n              <FormField\n                name=\"senderAddress\"\n                value={invoiceData.senderAddress.street}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    senderAddress: {\n                      ...invoiceData.senderAddress,\n                      street: e.target.value,\n                    },\n                  })\n                }\n                fullWidth={true}\n              />\n\n              <div className={classes.flex}>\n                <div className={classes.space}>\n                  <div className={classes.label}>City</div>\n\n                  <FormField\n                    name=\"senderCity\"\n                    value={invoiceData.senderAddress.city}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          city: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Post Code</div>\n\n                  <FormField\n                    name=\"senderPostCode\"\n                    value={invoiceData.senderAddress.postCode}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          postCode: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Country</div>\n\n                  <FormField\n                    name=\"senderCountry\"\n                    value={invoiceData.senderAddress.country}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          country: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <Typography\n                variant=\"h5\"\n                className={classes.heading}\n                color=\"primary\"\n              >\n                Bill to\n              </Typography>\n              <div className={classes.label}>Client's Name</div>\n\n              <FormField\n                name=\"clientName\"\n                value={invoiceData.clientName}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({ ...invoiceData, clientName: e.target.value })\n                }\n              />\n              <div className={classes.label}>Client's Email</div>\n\n              <FormField\n                name=\"clientEmail\"\n                value={invoiceData.clientEmail}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    clientEmail: e.target.value,\n                  })\n                }\n                validators={['required', 'isEmail']}\n                errorMessages={[\"can't be empty\", 'email is invalid']}\n              />\n              <div className={classes.label}>Street Address</div>\n\n              <FormField\n                name=\"clientStreet\"\n                value={invoiceData.clientAddress.street}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    clientAddress: {\n                      ...invoiceData.clientAddress,\n                      street: e.target.value,\n                    },\n                  })\n                }\n              />\n              <div className={classes.flex}>\n                <div className={classes.space}>\n                  <div className={classes.label}>City</div>\n\n                  <FormField\n                    name=\"clientCity\"\n                    value={invoiceData.clientAddress.city}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          city: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Post Code</div>\n\n                  <FormField\n                    name=\"clientPostCode\"\n                    value={invoiceData.clientAddress.postCode}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          postCode: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Country</div>\n\n                  <FormField\n                    name=\"clientCountry\"\n                    value={invoiceData.clientAddress.country}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          country: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <div className={classes.flex}>\n                <div>\n                  <div className={classes.label}>Invoice Date</div>\n\n                  <FormField\n                    name=\"createdAt\"\n                    type=\"date\"\n                    value={invoiceData.createdAt}\n                    fullWidth={true}\n                    onChange={(e) => {\n                      setInvocieData({\n                        ...invoiceData,\n                        createdAt: e.target.value,\n                        paymentDue: invoiceData.paymentTerms\n                          ? getDueDate(e.target.value, invoiceData.paymentTerms)\n                          : '',\n                      });\n                    }}\n                  />\n                </div>\n                <div>\n                  <div className={classes.label}>Payment terms</div>\n                  <div>\n                    <SelectValidator\n                      name=\"paymentTerms\"\n                      value={invoiceData.paymentTerms}\n                      validators={['required']}\n                      errorMessages={[\"can't be empty\"]}\n                      onChange={(e) => {\n                        setInvocieData({\n                          ...invoiceData,\n                          paymentTerms: e.target.value,\n                          paymentDue: invoiceData.createdAt\n                            ? getDueDate(invoiceData.createdAt, e.target.value)\n                            : '',\n                        });\n                      }}\n                    >\n                      <MenuItem value={''}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={30}>Next 30 days</MenuItem>\n                      <MenuItem value={14}>Next 14 days</MenuItem>\n                      <MenuItem value={7}>Next 7 day</MenuItem>\n                      <MenuItem value={1}>Next 1 day</MenuItem>\n                    </SelectValidator>\n                  </div>\n                </div>\n              </div>\n              <div className={classes.label}>Project Description</div>\n\n              <FormField\n                name=\"description\"\n                value={invoiceData.description}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    description: e.target.value,\n                  })\n                }\n              />\n              {invoiceData.items.length > 0 && (\n                <ItemsList\n                  items={invoiceData.items}\n                  handleChangeItem={handleChangeItemValue}\n                  deleteItem={onDeleteItem}\n                />\n              )}\n            </div>\n\n            <Button\n              variant=\"contained\"\n              fullWidth\n              className={classes.btnList}\n              onClick={addItemField}\n            >\n              <AddIcon />\n              Add New Item\n            </Button>\n            <div className={classes.btnGroup}>\n              <Button\n                variant=\"contained\"\n                onClick={() => dispatch(toggleFormShow())}\n                className={classes.btn}\n              >\n                {currentId ? 'Cancel' : 'Discard'}\n              </Button>\n              <div className={classes.btnRight}>\n                <Button\n                  style={{ display: currentId ? 'none' : 'inline' }}\n                  className={classes.btn}\n                  variant=\"outlined\"\n                  type=\"submit\"\n                  onClick={() =>\n                    setInvocieData({ ...invoiceData, status: 'draft' })\n                  }\n                >\n                  Save As Draft\n                </Button>\n                <Button\n                  className={classes.btn}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {currentId ? 'Save Changes' : 'Save & Add'}\n                </Button>\n              </div>\n            </div>\n          </ValidatorForm>\n        </Paper>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}