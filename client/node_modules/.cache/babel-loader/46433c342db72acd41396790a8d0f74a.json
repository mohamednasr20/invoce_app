{"ast":null,"code":"import React from'react';import{useDispatch,useSelector}from'react-redux';import{toggleFormShow}from'../../../actions/genralState';import{Typography,Button,MenuItem,FormControl,InputLabel,Select}from'@material-ui/core';import AddCircleIcon from'@material-ui/icons/AddCircle';import useStyles from'./styles';import useMediaQuery from'@material-ui/core/useMediaQuery';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InvoicesNav=function InvoicesNav(_ref){var invoices=_ref.invoices,status=_ref.status,changeStatus=_ref.changeStatus;var classes=useStyles();var dispatch=useDispatch();var smScreen=useMediaQuery('(max-width:600px)');var showForm=useSelector(function(state){return state.GlobalState.showForm;});var addNewInvoice=function addNewInvoice(){if(!showForm){dispatch(toggleFormShow());}};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{className:classes.header,variant:\"h4\",color:\"textPrimary\",children:\"Invoices\"}),/*#__PURE__*/_jsx(Typography,{className:classes.caption,variant:\"caption\",color:\"textSecondary\",children:smScreen?\"Invoices \".concat(invoices.length):\"There are \".concat(invoices.length,\" total invoices\")})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FormControl,{className:classes.formControl,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"customized-select-label\",className:classes.filterLabel,children:smScreen?'Filter':'Filter By Name'}),/*#__PURE__*/_jsxs(Select,{className:classes.select,labelId:\"customized-select-label\",id:\"customized-select\",value:status,onChange:changeStatus,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:/*#__PURE__*/_jsx(\"em\",{children:\"all\"})}),/*#__PURE__*/_jsx(MenuItem,{value:'pending',children:\"pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:'paid',children:\"paid\"}),/*#__PURE__*/_jsx(MenuItem,{value:'draft',children:\"Draft\"})]})]}),/*#__PURE__*/_jsxs(Button,{className:classes.btn,variant:\"contained\",color:\"primary\",onClick:addNewInvoice,children:[/*#__PURE__*/_jsx(AddCircleIcon,{className:classes.icon}),smScreen?'New':'New Invoice']})]})]});};export default InvoicesNav;","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Invoices/InvoicesNav/InvoicesNav.js"],"names":["React","useDispatch","useSelector","toggleFormShow","Typography","Button","MenuItem","FormControl","InputLabel","Select","AddCircleIcon","useStyles","useMediaQuery","InvoicesNav","invoices","status","changeStatus","classes","dispatch","smScreen","showForm","state","GlobalState","addNewInvoice","root","header","caption","length","formControl","filterLabel","select","btn","icon"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,KAA+B,8BAA/B,CACA,OACEC,UADF,CAEEC,MAFF,CAGEC,QAHF,CAIEC,WAJF,CAKEC,UALF,CAMEC,MANF,KAOO,mBAPP,CAQA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAwC,IAArCC,CAAAA,QAAqC,MAArCA,QAAqC,CAA3BC,MAA2B,MAA3BA,MAA2B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC1D,GAAMC,CAAAA,OAAO,CAAGN,SAAS,EAAzB,CACA,GAAMO,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CACA,GAAMkB,CAAAA,QAAQ,CAAGP,aAAa,CAAC,mBAAD,CAA9B,CACA,GAAMQ,CAAAA,QAAQ,CAAGlB,WAAW,CAAC,SAACmB,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAN,CAAkBF,QAA7B,EAAD,CAA5B,CAEA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAI,CAACH,QAAL,CAAe,CACbF,QAAQ,CAACf,cAAc,EAAf,CAAR,CACD,CACF,CAJD,CAMA,mBACE,aAAK,SAAS,CAAEc,OAAO,CAACO,IAAxB,wBACE,oCACE,KAAC,UAAD,EAAY,SAAS,CAAEP,OAAO,CAACQ,MAA/B,CAAuC,OAAO,CAAC,IAA/C,CAAoD,KAAK,CAAC,aAA1D,sBADF,cAIE,KAAC,UAAD,EACE,SAAS,CAAER,OAAO,CAACS,OADrB,CAEE,OAAO,CAAC,SAFV,CAGE,KAAK,CAAC,eAHR,UAKGP,QAAQ,oBACOL,QAAQ,CAACa,MADhB,sBAEQb,QAAQ,CAACa,MAFjB,mBALX,EAJF,GADF,cAeE,oCACE,MAAC,WAAD,EAAa,SAAS,CAAEV,OAAO,CAACW,WAAhC,wBACE,KAAC,UAAD,EACE,EAAE,CAAC,yBADL,CAEE,SAAS,CAAEX,OAAO,CAACY,WAFrB,UAIGV,QAAQ,CAAG,QAAH,CAAc,gBAJzB,EADF,cAOE,MAAC,MAAD,EACE,SAAS,CAAEF,OAAO,CAACa,MADrB,CAEE,OAAO,CAAC,yBAFV,CAGE,EAAE,CAAC,mBAHL,CAIE,KAAK,CAAEf,MAJT,CAKE,QAAQ,CAAEC,YALZ,wBAOE,KAAC,QAAD,EAAU,KAAK,CAAC,EAAhB,uBACE,2BADF,EAPF,cAUE,KAAC,QAAD,EAAU,KAAK,CAAE,SAAjB,qBAVF,cAWE,KAAC,QAAD,EAAU,KAAK,CAAE,MAAjB,kBAXF,cAYE,KAAC,QAAD,EAAU,KAAK,CAAE,OAAjB,mBAZF,GAPF,GADF,cAuBE,MAAC,MAAD,EACE,SAAS,CAAEC,OAAO,CAACc,GADrB,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,SAHR,CAIE,OAAO,CAAER,aAJX,wBAME,KAAC,aAAD,EAAe,SAAS,CAAEN,OAAO,CAACe,IAAlC,EANF,CAOGb,QAAQ,CAAG,KAAH,CAAW,aAPtB,GAvBF,GAfF,GADF,CAmDD,CA/DD,CAiEA,cAAeN,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow } from '../../../actions/genralState';\nimport {\n  Typography,\n  Button,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst InvoicesNav = ({ invoices, status, changeStatus }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const smScreen = useMediaQuery('(max-width:600px)');\n  const showForm = useSelector((state) => state.GlobalState.showForm);\n\n  const addNewInvoice = () => {\n    if (!showForm) {\n      dispatch(toggleFormShow());\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Typography className={classes.header} variant=\"h4\" color=\"textPrimary\">\n          Invoices\n        </Typography>\n        <Typography\n          className={classes.caption}\n          variant=\"caption\"\n          color=\"textSecondary\"\n        >\n          {smScreen\n            ? `Invoices ${invoices.length}`\n            : `There are ${invoices.length} total invoices`}\n        </Typography>\n      </div>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel\n            id=\"customized-select-label\"\n            className={classes.filterLabel}\n          >\n            {smScreen ? 'Filter' : 'Filter By Name'}\n          </InputLabel>\n          <Select\n            className={classes.select}\n            labelId=\"customized-select-label\"\n            id=\"customized-select\"\n            value={status}\n            onChange={changeStatus}\n          >\n            <MenuItem value=\"\">\n              <em>all</em>\n            </MenuItem>\n            <MenuItem value={'pending'}>pending</MenuItem>\n            <MenuItem value={'paid'}>paid</MenuItem>\n            <MenuItem value={'draft'}>Draft</MenuItem>\n          </Select>\n        </FormControl>\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={addNewInvoice}\n        >\n          <AddCircleIcon className={classes.icon} />\n          {smScreen ? 'New' : 'New Invoice'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default InvoicesNav;\n"]},"metadata":{},"sourceType":"module"}