{"ast":null,"code":"export const getTotal = items => items.length > 0 ? items.map(item => Number(item.total)).reduce((acc, currentValue) => acc + currentValue) : 0;\nexport const getDueDate = (created, paymentTerms) => {\n  const date = new Date(created);\n  const dueDate = new Date(date.setDate(date.getDate() + paymentTerms)).toISOString().split('T')[0];\n  return dueDate;\n};\nexport const data = {\n  createdAt: '',\n  paymentDue: '',\n  description: '',\n  paymentTerms: '',\n  clientName: '',\n  clientEmail: '',\n  status: 'pending',\n  senderAddress: {\n    street: '',\n    city: '',\n    postCode: '',\n    country: ''\n  },\n  clientAddress: {\n    street: '',\n    city: '',\n    postCode: '',\n    country: ''\n  },\n  items: [],\n  total: 0\n};","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/helpers.js"],"names":["getTotal","items","length","map","item","Number","total","reduce","acc","currentValue","getDueDate","created","paymentTerms","date","Date","dueDate","setDate","getDate","toISOString","split","data","createdAt","paymentDue","description","clientName","clientEmail","status","senderAddress","street","city","postCode","country","clientAddress"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IACtBA,KAAK,CAACC,MAAN,GAAe,CAAf,GACID,KAAK,CACFE,GADH,CACQC,IAAD,IAAUC,MAAM,CAACD,IAAI,CAACE,KAAN,CADvB,EAEGC,MAFH,CAEU,CAACC,GAAD,EAAMC,YAAN,KAAuBD,GAAG,GAAGC,YAFvC,CADJ,GAII,CALC;AAOP,OAAO,MAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,YAAV,KAA2B;AACnD,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASH,OAAT,CAAb;AACA,QAAMI,OAAO,GAAG,IAAID,IAAJ,CAASD,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAiBL,YAA9B,CAAT,EACbM,WADa,GAEbC,KAFa,CAEP,GAFO,EAEF,CAFE,CAAhB;AAIA,SAAOJ,OAAP;AACD,CAPM;AASP,OAAO,MAAMK,IAAI,GAAG;AAClBC,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,UAAU,EAAE,EAFM;AAGlBC,EAAAA,WAAW,EAAE,EAHK;AAIlBX,EAAAA,YAAY,EAAE,EAJI;AAKlBY,EAAAA,UAAU,EAAE,EALM;AAMlBC,EAAAA,WAAW,EAAE,EANK;AAOlBC,EAAAA,MAAM,EAAE,SAPU;AASlBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,EADK;AAEbC,IAAAA,IAAI,EAAE,EAFO;AAGbC,IAAAA,QAAQ,EAAE,EAHG;AAIbC,IAAAA,OAAO,EAAE;AAJI,GATG;AAelBC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,MAAM,EAAE,EADK;AAEbC,IAAAA,IAAI,EAAE,EAFO;AAGbC,IAAAA,QAAQ,EAAE,EAHG;AAIbC,IAAAA,OAAO,EAAE;AAJI,GAfG;AAqBlB9B,EAAAA,KAAK,EAAE,EArBW;AAsBlBK,EAAAA,KAAK,EAAE;AAtBW,CAAb","sourcesContent":["export const getTotal = (items) =>\n  items.length > 0\n    ? items\n        .map((item) => Number(item.total))\n        .reduce((acc, currentValue) => acc + currentValue)\n    : 0;\n\nexport const getDueDate = (created, paymentTerms) => {\n  const date = new Date(created);\n  const dueDate = new Date(date.setDate(date.getDate() + paymentTerms))\n    .toISOString()\n    .split('T')[0];\n\n  return dueDate;\n};\n\nexport const data = {\n  createdAt: '',\n  paymentDue: '',\n  description: '',\n  paymentTerms: '',\n  clientName: '',\n  clientEmail: '',\n  status: 'pending',\n\n  senderAddress: {\n    street: '',\n    city: '',\n    postCode: '',\n    country: '',\n  },\n  clientAddress: {\n    street: '',\n    city: '',\n    postCode: '',\n    country: '',\n  },\n  items: [],\n  total: 0,\n};\n"]},"metadata":{},"sourceType":"module"}