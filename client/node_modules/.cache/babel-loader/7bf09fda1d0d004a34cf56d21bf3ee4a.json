{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Input from './Input/Input';\nimport { signIn, signUp } from '../../actions/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport { Container, Typography, Paper, Avatar, Grid, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initalState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const error = useSelector(state => state.authReducer.error);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState(initalState);\n  ValidatorForm.addValidationRule('isPasswordMatch', value => {\n    if (value !== this.state.user.password) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const handleSignUp = () => setIsSignUp(!isSignUp);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignUp) {\n      dispatch(signUp(formData, history));\n    } else {\n      dispatch(signIn(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: classes.header,\n        children: isSignUp ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              value: formData.firstName,\n              type: \"text\",\n              label: \"First Name\",\n              half: true,\n              handleChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              value: formData.lastName,\n              type: \"text\",\n              label: \"Last Name\",\n              half: true,\n              handleChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            value: formData.email,\n            type: \"email\",\n            label: \"Email\",\n            handleChange: handleChange,\n            error: (error === null || error === void 0 ? void 0 : error.email) && !isSignUp && true || (error === null || error === void 0 ? void 0 : error.userExist) && isSignUp && true,\n            helperText: (error === null || error === void 0 ? void 0 : error.email) && !isSignUp && error.email || (error === null || error === void 0 ? void 0 : error.userExist) && isSignUp && error.userExist,\n            validators: ['required', 'isEmail'],\n            errorMessages: [\"can't be empty\", 'must be vaild email']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            value: formData.password,\n            type: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            error: (error === null || error === void 0 ? void 0 : error.password) && !isSignUp && true,\n            helperText: (error === null || error === void 0 ? void 0 : error.password) && !isSignUp && error.password,\n            validators: ['required', 'minNumber: 6', 'maxNumber: 20'],\n            errorMessages: [\"cant't be empty\", 'password must be 6 more than 6 numbers and less than 21 number', 'password must be 6 more than 6 numbers and less than 21 number']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            value: formData.confirmPassword,\n            type: \"password\",\n            label: \"Confirm Password\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.btn,\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          type: \"submit\",\n          children: isSignUp ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.signState,\n        fullWidth: true,\n        onClick: handleSignUp,\n        children: isSignUp ? 'Have an acount ? sign in' : \"Don't have an acount ? sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"p4wDIzV/4dhnibA2vHNEfjdhsek=\", false, function () {\n  return [useStyles, useDispatch, useHistory, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Auth/Auth.js"],"names":["React","useState","Input","signIn","signUp","useDispatch","useSelector","useHistory","ValidatorForm","Container","Typography","Paper","Avatar","Grid","Button","LockOutlinedIcon","useStyles","initalState","firstName","lastName","email","password","confirmPassword","Auth","classes","dispatch","history","error","state","authReducer","isSignUp","setIsSignUp","formData","setFormData","addValidationRule","value","user","handleSignUp","handleSubmit","e","preventDefault","handleChange","target","name","root","paper","avatar","header","form","userExist","btn","signState"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Input from './Input/Input';\nimport { signIn, signUp } from '../../actions/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { ValidatorForm } from 'react-material-ui-form-validator';\nimport {\n  Container,\n  Typography,\n  Paper,\n  Avatar,\n  Grid,\n  Button,\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\n\nconst initalState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst Auth = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const error = useSelector((state) => state.authReducer.error);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState(initalState);\n\n  ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n    if (value !== this.state.user.password) {\n      return false;\n    }\n    return true;\n  });\n\n  const handleSignUp = () => setIsSignUp(!isSignUp);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isSignUp) {\n      dispatch(signUp(formData, history));\n    } else {\n      dispatch(signIn(formData, history));\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Container component=\"main\" className={classes.root}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\" className={classes.header}>\n          {isSignUp ? 'Sign up' : 'Sign in'}\n        </Typography>\n\n        <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignUp && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  value={formData.firstName}\n                  type=\"text\"\n                  label=\"First Name\"\n                  half\n                  handleChange={handleChange}\n                />\n                <Input\n                  name=\"lastName\"\n                  value={formData.lastName}\n                  type=\"text\"\n                  label=\"Last Name\"\n                  half\n                  handleChange={handleChange}\n                />\n              </>\n            )}\n            <Input\n              name=\"email\"\n              value={formData.email}\n              type=\"email\"\n              label=\"Email\"\n              handleChange={handleChange}\n              error={\n                (error?.email && !isSignUp && true) ||\n                (error?.userExist && isSignUp && true)\n              }\n              helperText={\n                (error?.email && !isSignUp && error.email) ||\n                (error?.userExist && isSignUp && error.userExist)\n              }\n              validators={['required', 'isEmail']}\n              errorMessages={[\"can't be empty\", 'must be vaild email']}\n            />\n\n            <Input\n              name=\"password\"\n              value={formData.password}\n              type=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              error={error?.password && !isSignUp && true}\n              helperText={error?.password && !isSignUp && error.password}\n              validators={['required', 'minNumber: 6', 'maxNumber: 20']}\n              errorMessages={[\n                \"cant't be empty\",\n                'password must be 6 more than 6 numbers and less than 21 number',\n                'password must be 6 more than 6 numbers and less than 21 number',\n              ]}\n            />\n\n            {isSignUp && (\n              <Input\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                type=\"password\"\n                label=\"Confirm Password\"\n                handleChange={handleChange}\n              />\n            )}\n          </Grid>\n          <Button\n            className={classes.btn}\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n          >\n            {isSignUp ? 'Sign Up' : 'Sign In'}\n          </Button>\n        </ValidatorForm>\n        <Button className={classes.signState} fullWidth onClick={handleSignUp}>\n          {isSignUp\n            ? 'Have an acount ? sign in'\n            : \"Don't have an acount ? sign up\"}\n        </Button>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}