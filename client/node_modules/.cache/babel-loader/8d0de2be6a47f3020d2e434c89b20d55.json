{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/FormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/themeMode';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormModal = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector(state => state.GlobalState.showForm);\n  const currentId = useSelector(state => state.GlobalState.currentId);\n  const invoice = useSelector(state => currentId ? state.GlobalState.invoices.find(invoice => invoice._id === currentId) : null);\n  const data = {\n    createdAt: '',\n    paymentDue: '',\n    description: '',\n    paymentTerms: '',\n    clientName: '',\n    clientEmail: '',\n    status: 'pending',\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: ''\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: ''\n    },\n    items: [],\n    total: 0\n  };\n  const [invoiceData, setInvocieData] = useState(data);\n\n  const addItemField = () => {\n    setInvocieData({ ...invoiceData,\n      items: [...invoiceData.items, {\n        name: '',\n        quantity: 0,\n        price: 0,\n        total: 0\n      }]\n    });\n  };\n\n  const onDeleteItem = id => {\n    const newItems = invoiceData.items.filter(item => item._id !== id);\n    setInvocieData({ ...invoiceData,\n      items: newItems\n    });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n    const newItems = invoiceData.items.map((item, idx) => idx === invoiceData.items.indexOf(i) ? inputName === 'name' ? { ...item,\n      name: value\n    } : { ...item,\n      [inputName]: Number(value),\n      total: inputName === 'price' ? value * item.quantity : value * item.price\n    } : item);\n    setInvocieData({ ...invoiceData,\n      items: newItems,\n      total: newItems.map(item => Number(item.total)).reduce((acc, currentValue) => acc + currentValue)\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const getDueDate = (created, paymentTerms) => {\n    const date = new Date(created);\n    const dueDate = new Date(date.setDate(date.getDate() + paymentTerms)).toISOString().split('T')[0];\n    return dueDate;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n    if (!currentId) clear(); // eslint-disable-next-line\n  }, [currentId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: showForm ? 'block' : 'none'\n    },\n    className: classes.root\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormModal, \"yXs6eEQiHW6wRXjYlcx+FVt7wzQ=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = FormModal;\nexport default FormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormModal\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/FormModal.js"],"names":["React","useState","useEffect","useHistory","createInvoice","updateInvoice","useDispatch","useSelector","toggleFormShow","handleCurrentId","useStyles","FormModal","classes","history","dispatch","showForm","state","GlobalState","currentId","invoice","invoices","find","_id","data","createdAt","paymentDue","description","paymentTerms","clientName","clientEmail","status","senderAddress","street","city","postCode","country","clientAddress","items","total","invoiceData","setInvocieData","addItemField","name","quantity","price","onDeleteItem","id","newItems","filter","item","handleChangeItemValue","e","i","inputName","target","value","map","idx","indexOf","Number","reduce","acc","currentValue","clear","getDueDate","created","date","Date","dueDate","setDate","getDate","toISOString","split","onSubmit","preventDefault","push","display","root"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/themeMode';\n\nimport useStyles from './styles';\n\nconst FormModal = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector((state) => state.GlobalState.showForm);\n  const currentId = useSelector((state) => state.GlobalState.currentId);\n  const invoice = useSelector((state) =>\n    currentId\n      ? state.GlobalState.invoices.find((invoice) => invoice._id === currentId)\n      : null\n  );\n\n  const data = {\n    createdAt: '',\n    paymentDue: '',\n    description: '',\n    paymentTerms: '',\n    clientName: '',\n    clientEmail: '',\n    status: 'pending',\n\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    items: [],\n    total: 0,\n  };\n\n  const [invoiceData, setInvocieData] = useState(data);\n\n  const addItemField = () => {\n    setInvocieData({\n      ...invoiceData,\n      items: [\n        ...invoiceData.items,\n        {\n          name: '',\n          quantity: 0,\n          price: 0,\n          total: 0,\n        },\n      ],\n    });\n  };\n\n  const onDeleteItem = (id) => {\n    const newItems = invoiceData.items.filter((item) => item._id !== id);\n    setInvocieData({ ...invoiceData, items: newItems });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n\n    const newItems = invoiceData.items.map((item, idx) =>\n      idx === invoiceData.items.indexOf(i)\n        ? inputName === 'name'\n          ? { ...item, name: value }\n          : {\n              ...item,\n              [inputName]: Number(value),\n              total:\n                inputName === 'price'\n                  ? value * item.quantity\n                  : value * item.price,\n            }\n        : item\n    );\n\n    setInvocieData({\n      ...invoiceData,\n      items: newItems,\n      total: newItems\n        .map((item) => Number(item.total))\n        .reduce((acc, currentValue) => acc + currentValue),\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const getDueDate = (created, paymentTerms) => {\n    const date = new Date(created);\n    const dueDate = new Date(date.setDate(date.getDate() + paymentTerms))\n      .toISOString()\n      .split('T')[0];\n\n    return dueDate;\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n\n    if (!currentId) clear();\n\n    // eslint-disable-next-line\n  }, [currentId]);\n  return (\n    <div\n      style={{ display: showForm ? 'block' : 'none' }}\n      className={classes.root}\n    ></div>\n  );\n};\n\nexport default FormModal;\n"]},"metadata":{},"sourceType":"module"}