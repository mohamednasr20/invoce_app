{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FormField from './FormField/FormField';\nimport ItemsList from './ItemsList/ItemsList';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/genralState';\nimport { Container, Typography, MenuItem, Button, Paper, Modal } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from './styles';\nimport { ValidatorForm, SelectValidator } from 'react-material-ui-form-validator';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector(state => state.GlobalState.showForm);\n  const currentId = useSelector(state => state.GlobalState.currentId);\n  const invoice = useSelector(state => currentId ? state.Invoices.invoices.find(invoice => invoice._id === currentId) : null);\n  const data = {\n    createdAt: '',\n    paymentDue: '',\n    description: '',\n    paymentTerms: '',\n    clientName: '',\n    clientEmail: '',\n    status: 'pending',\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: ''\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: ''\n    },\n    items: [],\n    total: 0\n  };\n  const [invoiceData, setInvocieData] = useState(data);\n\n  const addItemField = () => {\n    setInvocieData({ ...invoiceData,\n      items: [...invoiceData.items, {\n        name: '',\n        quantity: 0,\n        price: 0,\n        total: 0,\n        id: uuidv4()\n      }]\n    });\n  };\n\n  const getTotal = items => items.length > 0 ? items.map(item => Number(item.total)).reduce((acc, currentValue) => acc + currentValue) : 0;\n\n  const onDeleteItem = id => {\n    const newItems = invoiceData.items.filter(item => item.id !== id);\n    setInvocieData({ ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems)\n    });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n    const newItems = invoiceData.items.map((item, idx) => idx === invoiceData.items.indexOf(i) ? inputName === 'name' ? { ...item,\n      name: value\n    } : { ...item,\n      [inputName]: Number(value),\n      total: inputName === 'price' ? value * item.quantity : value * item.price\n    } : item);\n    setInvocieData({ ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems)\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const getDueDate = (created, paymentTerms) => {\n    const date = new Date(created);\n    const dueDate = new Date(date.setDate(date.getDate() + paymentTerms)).toISOString().split('T')[0];\n    return dueDate;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n    if (!currentId) clear(); // eslint-disable-next-line\n  }, [currentId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: showForm === undefined ? false : showForm,\n    onClose: () => dispatch(toggleFormShow()),\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\" // style={{ display: showForm ? 'block' : 'none' }}\n    ,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: currentId ? `Edit #${currentId.slice(18)}` : 'New Invoice'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.heading,\n              color: \"primary\",\n              children: \"Bill From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"senderAddress\",\n              value: invoiceData.senderAddress.street,\n              onChange: e => setInvocieData({ ...invoiceData,\n                senderAddress: { ...invoiceData.senderAddress,\n                  street: e.target.value\n                }\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderCity\",\n                  value: invoiceData.senderAddress.city,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      city: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Post Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderPostCode\",\n                  value: invoiceData.senderAddress.postCode,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      postCode: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderCountry\",\n                  value: invoiceData.senderAddress.country,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      country: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.heading,\n              color: \"primary\",\n              children: \"Bill to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Client's Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientName\",\n              value: invoiceData.clientName,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Client's Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientEmail\",\n              value: invoiceData.clientEmail,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientEmail: e.target.value\n              }),\n              validators: ['required', 'isEmail'],\n              errorMessages: [\"can't be empty\", 'email is invalid']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientStreet\",\n              value: invoiceData.clientAddress.street,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientAddress: { ...invoiceData.clientAddress,\n                  street: e.target.value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientCity\",\n                  value: invoiceData.clientAddress.city,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      city: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Post Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientPostCode\",\n                  value: invoiceData.clientAddress.postCode,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      postCode: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientCountry\",\n                  value: invoiceData.clientAddress.country,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      country: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Invoice Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"createdAt\",\n                  type: \"date\",\n                  value: invoiceData.createdAt,\n                  fullWidth: true,\n                  onChange: e => {\n                    setInvocieData({ ...invoiceData,\n                      createdAt: e.target.value,\n                      paymentDue: invoiceData.paymentTerms ? getDueDate(e.target.value, invoiceData.paymentTerms) : ''\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Payment terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                    name: \"paymentTerms\",\n                    value: invoiceData.paymentTerms,\n                    validators: ['required'],\n                    errorMessages: [\"can't be empty\"],\n                    onChange: e => {\n                      setInvocieData({ ...invoiceData,\n                        paymentTerms: e.target.value,\n                        paymentDue: invoiceData.createdAt ? getDueDate(invoiceData.createdAt, e.target.value) : ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: '',\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        children: \"None\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 30,\n                      children: \"Next 30 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 14,\n                      children: \"Next 14 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 7,\n                      children: \"Next 7 day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 1,\n                      children: \"Next 1 day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"description\",\n              value: invoiceData.description,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), invoiceData.items.length > 0 && /*#__PURE__*/_jsxDEV(ItemsList, {\n              items: invoiceData.items,\n              handleChangeItem: handleChangeItemValue,\n              deleteItem: onDeleteItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            className: classes.btnList,\n            onClick: addItemField,\n            children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), \"Add New Item\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.btnGroup,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => dispatch(toggleFormShow()),\n              className: classes.btn,\n              children: currentId ? 'Cancel' : 'Discard'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.btnRight,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  display: currentId ? 'none' : 'inline'\n                },\n                className: classes.btn,\n                variant: \"outlined\",\n                type: \"submit\",\n                onClick: () => setInvocieData({ ...invoiceData,\n                  status: 'draft'\n                }),\n                children: \"Save As Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.btn,\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                children: currentId ? 'Save Changes' : 'Save & Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"yXs6eEQiHW6wRXjYlcx+FVt7wzQ=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","FormField","ItemsList","createInvoice","updateInvoice","useDispatch","useSelector","toggleFormShow","handleCurrentId","Container","Typography","MenuItem","Button","Paper","Modal","useHistory","AddIcon","useStyles","ValidatorForm","SelectValidator","v4","uuidv4","Form","classes","history","dispatch","showForm","state","GlobalState","currentId","invoice","Invoices","invoices","find","_id","data","createdAt","paymentDue","description","paymentTerms","clientName","clientEmail","status","senderAddress","street","city","postCode","country","clientAddress","items","total","invoiceData","setInvocieData","addItemField","name","quantity","price","id","getTotal","length","map","item","Number","reduce","acc","currentValue","onDeleteItem","newItems","filter","handleChangeItemValue","e","i","inputName","target","value","idx","indexOf","clear","getDueDate","created","date","Date","dueDate","setDate","getDate","toISOString","split","onSubmit","preventDefault","push","undefined","root","formContainer","paper","slice","heading","label","flex","space","btnList","btnGroup","btn","btnRight","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormField from './FormField/FormField';\nimport ItemsList from './ItemsList/ItemsList';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/genralState';\nimport {\n  Container,\n  Typography,\n  MenuItem,\n  Button,\n  Paper,\n  Modal,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from './styles';\nimport {\n  ValidatorForm,\n  SelectValidator,\n} from 'react-material-ui-form-validator';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Form = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector((state) => state.GlobalState.showForm);\n  const currentId = useSelector((state) => state.GlobalState.currentId);\n  const invoice = useSelector((state) =>\n    currentId\n      ? state.Invoices.invoices.find((invoice) => invoice._id === currentId)\n      : null\n  );\n\n  const data = {\n    createdAt: '',\n    paymentDue: '',\n    description: '',\n    paymentTerms: '',\n    clientName: '',\n    clientEmail: '',\n    status: 'pending',\n\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    items: [],\n    total: 0,\n  };\n\n  const [invoiceData, setInvocieData] = useState(data);\n\n  const addItemField = () => {\n    setInvocieData({\n      ...invoiceData,\n      items: [\n        ...invoiceData.items,\n        {\n          name: '',\n          quantity: 0,\n          price: 0,\n          total: 0,\n          id: uuidv4(),\n        },\n      ],\n    });\n  };\n\n  const getTotal = (items) =>\n    items.length > 0\n      ? items\n          .map((item) => Number(item.total))\n          .reduce((acc, currentValue) => acc + currentValue)\n      : 0;\n\n  const onDeleteItem = (id) => {\n    const newItems = invoiceData.items.filter((item) => item.id !== id);\n    setInvocieData({\n      ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems),\n    });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n\n    const newItems = invoiceData.items.map((item, idx) =>\n      idx === invoiceData.items.indexOf(i)\n        ? inputName === 'name'\n          ? { ...item, name: value }\n          : {\n              ...item,\n              [inputName]: Number(value),\n              total:\n                inputName === 'price'\n                  ? value * item.quantity\n                  : value * item.price,\n            }\n        : item\n    );\n\n    setInvocieData({\n      ...invoiceData,\n      items: newItems,\n      total: getTotal(newItems),\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const getDueDate = (created, paymentTerms) => {\n    const date = new Date(created);\n    const dueDate = new Date(date.setDate(date.getDate() + paymentTerms))\n      .toISOString()\n      .split('T')[0];\n\n    return dueDate;\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n\n    if (!currentId) clear();\n\n    // eslint-disable-next-line\n  }, [currentId]);\n  return (\n    <Modal\n      open={showForm === undefined ? false : showForm}\n      onClose={() => dispatch(toggleFormShow())}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      // style={{ display: showForm ? 'block' : 'none' }}\n      className={classes.root}\n    >\n      <Container className={classes.formContainer}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\">\n            {currentId ? `Edit #${currentId.slice(18)}` : 'New Invoice'}\n          </Typography>\n\n          <ValidatorForm onSubmit={onSubmit}>\n            <div>\n              <Typography\n                variant=\"h5\"\n                className={classes.heading}\n                color=\"primary\"\n              >\n                Bill From\n              </Typography>\n              <div className={classes.label}>Street Address</div>\n\n              <FormField\n                name=\"senderAddress\"\n                value={invoiceData.senderAddress.street}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    senderAddress: {\n                      ...invoiceData.senderAddress,\n                      street: e.target.value,\n                    },\n                  })\n                }\n                fullWidth={true}\n              />\n\n              <div className={classes.flex}>\n                <div className={classes.space}>\n                  <div className={classes.label}>City</div>\n\n                  <FormField\n                    name=\"senderCity\"\n                    value={invoiceData.senderAddress.city}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          city: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Post Code</div>\n\n                  <FormField\n                    name=\"senderPostCode\"\n                    value={invoiceData.senderAddress.postCode}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          postCode: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Country</div>\n\n                  <FormField\n                    name=\"senderCountry\"\n                    value={invoiceData.senderAddress.country}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          country: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <Typography\n                variant=\"h5\"\n                className={classes.heading}\n                color=\"primary\"\n              >\n                Bill to\n              </Typography>\n              <div className={classes.label}>Client's Name</div>\n\n              <FormField\n                name=\"clientName\"\n                value={invoiceData.clientName}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({ ...invoiceData, clientName: e.target.value })\n                }\n              />\n              <div className={classes.label}>Client's Email</div>\n\n              <FormField\n                name=\"clientEmail\"\n                value={invoiceData.clientEmail}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    clientEmail: e.target.value,\n                  })\n                }\n                validators={['required', 'isEmail']}\n                errorMessages={[\"can't be empty\", 'email is invalid']}\n              />\n              <div className={classes.label}>Street Address</div>\n\n              <FormField\n                name=\"clientStreet\"\n                value={invoiceData.clientAddress.street}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    clientAddress: {\n                      ...invoiceData.clientAddress,\n                      street: e.target.value,\n                    },\n                  })\n                }\n              />\n              <div className={classes.flex}>\n                <div className={classes.space}>\n                  <div className={classes.label}>City</div>\n\n                  <FormField\n                    name=\"clientCity\"\n                    value={invoiceData.clientAddress.city}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          city: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Post Code</div>\n\n                  <FormField\n                    name=\"clientPostCode\"\n                    value={invoiceData.clientAddress.postCode}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          postCode: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Country</div>\n\n                  <FormField\n                    name=\"clientCountry\"\n                    value={invoiceData.clientAddress.country}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          country: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <div className={classes.flex}>\n                <div>\n                  <div className={classes.label}>Invoice Date</div>\n\n                  <FormField\n                    name=\"createdAt\"\n                    type=\"date\"\n                    value={invoiceData.createdAt}\n                    fullWidth={true}\n                    onChange={(e) => {\n                      setInvocieData({\n                        ...invoiceData,\n                        createdAt: e.target.value,\n                        paymentDue: invoiceData.paymentTerms\n                          ? getDueDate(e.target.value, invoiceData.paymentTerms)\n                          : '',\n                      });\n                    }}\n                  />\n                </div>\n                <div>\n                  <div className={classes.label}>Payment terms</div>\n                  <div>\n                    <SelectValidator\n                      name=\"paymentTerms\"\n                      value={invoiceData.paymentTerms}\n                      validators={['required']}\n                      errorMessages={[\"can't be empty\"]}\n                      onChange={(e) => {\n                        setInvocieData({\n                          ...invoiceData,\n                          paymentTerms: e.target.value,\n                          paymentDue: invoiceData.createdAt\n                            ? getDueDate(invoiceData.createdAt, e.target.value)\n                            : '',\n                        });\n                      }}\n                    >\n                      <MenuItem value={''}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={30}>Next 30 days</MenuItem>\n                      <MenuItem value={14}>Next 14 days</MenuItem>\n                      <MenuItem value={7}>Next 7 day</MenuItem>\n                      <MenuItem value={1}>Next 1 day</MenuItem>\n                    </SelectValidator>\n                  </div>\n                </div>\n              </div>\n              <div className={classes.label}>Project Description</div>\n\n              <FormField\n                name=\"description\"\n                value={invoiceData.description}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    description: e.target.value,\n                  })\n                }\n              />\n              {invoiceData.items.length > 0 && (\n                <ItemsList\n                  items={invoiceData.items}\n                  handleChangeItem={handleChangeItemValue}\n                  deleteItem={onDeleteItem}\n                />\n              )}\n            </div>\n\n            <Button\n              variant=\"contained\"\n              fullWidth\n              className={classes.btnList}\n              onClick={addItemField}\n            >\n              <AddIcon />\n              Add New Item\n            </Button>\n            <div className={classes.btnGroup}>\n              <Button\n                variant=\"contained\"\n                onClick={() => dispatch(toggleFormShow())}\n                className={classes.btn}\n              >\n                {currentId ? 'Cancel' : 'Discard'}\n              </Button>\n              <div className={classes.btnRight}>\n                <Button\n                  style={{ display: currentId ? 'none' : 'inline' }}\n                  className={classes.btn}\n                  variant=\"outlined\"\n                  type=\"submit\"\n                  onClick={() =>\n                    setInvocieData({ ...invoiceData, status: 'draft' })\n                  }\n                >\n                  Save As Draft\n                </Button>\n                <Button\n                  className={classes.btn}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {currentId ? 'Save Changes' : 'Save & Add'}\n                </Button>\n              </div>\n            </div>\n          </ValidatorForm>\n        </Paper>\n      </Container>\n    </Modal>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}