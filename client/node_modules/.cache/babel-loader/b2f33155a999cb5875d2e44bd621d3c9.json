{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Drawer/PermanentDraweLeft.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer, Avatar, Button } from '@material-ui/core';\nimport iconMoon from \"../../assets/icon-moon.svg\";\nimport iconSun from \"../../assets/icon-sun.svg\";\nimport logo from \"../../assets/logo.svg\";\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PermanentDrawerLeft = () => {\n  _s();\n\n  const classes = useStyles();\n  const lgScreen = useMediaQuery('(min-width:960px)');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isDarkMode = useSelector(state => state.globalState.isDarkMode);\n  const authData = useSelector(state => state.authReducer.authData);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n    history.push('/auth');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: lgScreen && /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      anchor: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoDiv,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isDarkMode ? iconSun : iconMoon,\n        alt: \"moon\",\n        className: classes.icons,\n        onClick: () => toggleMode()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), authData && /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: \"avatar\",\n        className: classes.avatar,\n        children: authData === null || authData === void 0 ? void 0 : authData.result.name.charAt(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), authData && /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.logout,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleLogout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PermanentDrawerLeft, \"YXBBLd0Q88YQELSSDXuoDXqKFrc=\", false, function () {\n  return [useStyles, useMediaQuery, useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = PermanentDrawerLeft;\nexport default PermanentDrawerLeft;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermanentDrawerLeft\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Drawer/PermanentDraweLeft.js"],"names":["React","useHistory","Drawer","Avatar","Button","switchTheme","useDispatch","useSelector","logout","useStyles","useMediaQuery","PermanentDrawerLeft","classes","lgScreen","dispatch","history","isDarkMode","state","globalState","authData","authReducer","toggleMode","handleLogout","push","root","drawer","paper","drawerPaper","logoDiv","logo","iconSun","iconMoon","icons","avatar","result","name","charAt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,mBAAvC;;;;AAIA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,QAAQ,GAAGH,aAAa,CAAC,mBAAD,CAA9B;AACA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,UAAU,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,UAA9B,CAA9B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACG,WAAN,CAAkBD,QAA9B,CAA5B;;AAEA,QAAME,UAAU,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACD,GAFD;;AAIA,QAAMiB,YAAY,GAAG,MAAM;AACzBR,IAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AAEAO,IAAAA,OAAO,CAACQ,IAAR,CAAa,OAAb;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACY,IAAxB;AAAA,cACGX,QAAQ,iBACP,QAAC,MAAD;AACE,MAAA,SAAS,EAAED,OAAO,CAACa,MADrB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAEd,OAAO,CAACe;AADR,OAHX;AAME,MAAA,MAAM,EAAC,MANT;AAAA,8BAQE;AAAK,QAAA,SAAS,EAAEf,OAAO,CAACgB,OAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAEjB,OAAO,CAACiB;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAYE;AACE,QAAA,GAAG,EAAEb,UAAU,GAAGc,OAAH,GAAaC,QAD9B;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,SAAS,EAAEnB,OAAO,CAACoB,KAHrB;AAIE,QAAA,OAAO,EAAE,MAAMX,UAAU;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAZF,EAmBGF,QAAQ,iBACP,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAEP,OAAO,CAACqB,MAAxC;AAAA,kBACGd,QADH,aACGA,QADH,uBACGA,QAAQ,CAAEe,MAAV,CAAiBC,IAAjB,CAAsBC,MAAtB,CAA6B,CAA7B;AADH;AAAA;AAAA;AAAA;AAAA,cApBJ,EAwBGjB,QAAQ,iBACP,QAAC,MAAD;AACE,QAAA,SAAS,EAAEP,OAAO,CAACJ,MADrB;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAEc,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA3DD;;GAAMX,mB;UACYF,S,EACCC,a,EACAJ,W,EACDL,U,EACGM,W,EACFA,W;;;KANbI,mB;AA6DN,eAAeA,mBAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Drawer, Avatar, Button } from '@material-ui/core';\nimport iconMoon from '../../assets/icon-moon.svg';\nimport iconSun from '../../assets/icon-sun.svg';\nimport logo from '../../assets/logo.svg';\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst PermanentDrawerLeft = () => {\n  const classes = useStyles();\n  const lgScreen = useMediaQuery('(min-width:960px)');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isDarkMode = useSelector((state) => state.globalState.isDarkMode);\n  const authData = useSelector((state) => state.authReducer.authData);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n\n    history.push('/auth');\n  };\n\n  return (\n    <div className={classes.root}>\n      {lgScreen && (\n        <Drawer\n          className={classes.drawer}\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          anchor=\"left\"\n        >\n          <div className={classes.logoDiv}>\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n          </div>\n\n          <img\n            src={isDarkMode ? iconSun : iconMoon}\n            alt=\"moon\"\n            className={classes.icons}\n            onClick={() => toggleMode()}\n          />\n\n          {authData && (\n            <Avatar alt=\"avatar\" className={classes.avatar}>\n              {authData?.result.name.charAt(0)}\n            </Avatar>\n          )}\n          {authData && (\n            <Button\n              className={classes.logout}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleLogout}\n            >\n              logout\n            </Button>\n          )}\n        </Drawer>\n      )}\n    </div>\n  );\n};\n\nexport default PermanentDrawerLeft;\n"]},"metadata":{},"sourceType":"module"}