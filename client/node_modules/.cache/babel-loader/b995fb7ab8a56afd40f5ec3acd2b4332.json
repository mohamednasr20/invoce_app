{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/NavbarSmallScreen/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport iconMoon from \"../../assets/icon-moon.svg\";\nimport iconSun from \"../../assets/icon-sun.svg\";\nimport logo from \"../../assets/logo.svg\";\nimport avatar from '../../assets/image-avatar.jpg';\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const classes = useStyles();\n  const mDScreen = useMediaQuery('(max-width:960px)');\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector(state => state.globalState.isDarkMode);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: mDScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoDiv,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: isDarkMode ? iconSun : iconMoon,\n        alt: \"moon\",\n        className: classes.icons,\n        onClick: () => toggleMode()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: \"avatar\",\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"+zc6CzlBYnh9uq6+emQ7k1o49V8=\", false, function () {\n  return [useStyles, useMediaQuery, useDispatch, useSelector];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/NavbarSmallScreen/Navbar.js"],"names":["React","avatar","switchTheme","useDispatch","useSelector","Avatar","useStyles","useMediaQuery","Navbar","classes","mDScreen","dispatch","isDarkMode","state","globalState","toggleMode","root","logoDiv","logo","iconSun","iconMoon","icons"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAIA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAMI,QAAQ,GAAGH,aAAa,CAAC,mBAAD,CAA9B;AAEA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,UAA9B,CAA9B;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvBJ,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,cACGQ,QAAQ,iBACP;AAAK,MAAA,SAAS,EAAED,OAAO,CAACO,IAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACQ,OAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAET,OAAO,CAACS;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,GAAG,EAAEN,UAAU,GAAGO,OAAH,GAAaC,QAD9B;AAEE,QAAA,GAAG,EAAC,MAFN;AAGE,QAAA,SAAS,EAAEX,OAAO,CAACY,KAHrB;AAIE,QAAA,OAAO,EAAE,MAAMN,UAAU;AAJ3B;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEd,MAAb;AAAqB,QAAA,GAAG,EAAC,QAAzB;AAAkC,QAAA,SAAS,EAAEQ,OAAO,CAACR;AAArD;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAmBD,CA9BD;;GAAMO,M;UACYF,S,EACCC,a,EAEAJ,W,EACEC,W;;;KALfI,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport iconMoon from '../../assets/icon-moon.svg';\nimport iconSun from '../../assets/icon-sun.svg';\nimport logo from '../../assets/logo.svg';\nimport avatar from '../../assets/image-avatar.jpg';\nimport { switchTheme } from '../../actions/genralState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const mDScreen = useMediaQuery('(max-width:960px)');\n\n  const dispatch = useDispatch();\n  const isDarkMode = useSelector((state) => state.globalState.isDarkMode);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  return (\n    <>\n      {mDScreen && (\n        <div className={classes.root}>\n          <div className={classes.logoDiv}>\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n          </div>\n          <img\n            src={isDarkMode ? iconSun : iconMoon}\n            alt=\"moon\"\n            className={classes.icons}\n            onClick={() => toggleMode()}\n          />\n\n          <Avatar src={avatar} alt=\"avatar\" className={classes.avatar} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}