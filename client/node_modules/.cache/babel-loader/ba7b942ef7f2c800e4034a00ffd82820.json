{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Invoices/InvoicesNav/InvoicesNav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow } from '../../../actions/genralState';\nimport { Typography, Button, MenuItem, FormControl, InputLabel, Select } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoicesNav = ({\n  invoices,\n  status,\n  changeStatus\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const smScreen = useMediaQuery('(max-width:600px)');\n  const showForm = useSelector(state => state.GlobalState.showForm);\n\n  const addNewInvoice = () => {\n    if (!showForm) {\n      dispatch(toggleFormShow());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.header,\n        variant: \"h4\",\n        color: \"textPrimary\",\n        children: \"Invoices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.caption,\n        variant: \"caption\",\n        color: \"textSecondary\",\n        children: smScreen ? `Invoices ${invoices.length}` : `There are ${invoices.length} total invoices`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"customized-select-label\",\n          className: classes.filterLabel,\n          children: smScreen ? 'Filter' : 'Filter By Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: classes.select,\n          labelId: \"customized-select-label\",\n          id: \"customized-select\",\n          value: status,\n          onChange: changeStatus,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'pending',\n            children: \"pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'paid',\n            children: \"paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'draft',\n            children: \"Draft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: addNewInvoice,\n        children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n          className: classes.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), smScreen ? 'New' : 'New Invoice']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoicesNav, \"jnV/N6TZGX0u3B8iwAGZfx2mwIs=\", false, function () {\n  return [useStyles, useDispatch, useMediaQuery, useSelector];\n});\n\n_c = InvoicesNav;\nexport default InvoicesNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoicesNav\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Invoices/InvoicesNav/InvoicesNav.js"],"names":["React","useDispatch","useSelector","toggleFormShow","Typography","Button","MenuItem","FormControl","InputLabel","Select","AddCircleIcon","useStyles","useMediaQuery","InvoicesNav","invoices","status","changeStatus","classes","dispatch","smScreen","showForm","state","GlobalState","addNewInvoice","root","header","caption","length","formControl","filterLabel","select","btn","icon"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,MANF,QAOO,mBAPP;AAQA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAwC;AAAA;;AAC1D,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGP,aAAa,CAAC,mBAAD,CAA9B;AACA,QAAMQ,QAAQ,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,QAA9B,CAA5B;;AAEA,QAAMG,aAAa,GAAG,MAAM;AAC1B,QAAI,CAACH,QAAL,EAAe;AACbF,MAAAA,QAAQ,CAACf,cAAc,EAAf,CAAR;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACO,IAAxB;AAAA,4BACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEP,OAAO,CAACQ,MAA/B;AAAuC,QAAA,OAAO,EAAC,IAA/C;AAAoD,QAAA,KAAK,EAAC,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AACE,QAAA,SAAS,EAAER,OAAO,CAACS,OADrB;AAEE,QAAA,OAAO,EAAC,SAFV;AAGE,QAAA,KAAK,EAAC,eAHR;AAAA,kBAKGP,QAAQ,GACJ,YAAWL,QAAQ,CAACa,MAAO,EADvB,GAEJ,aAAYb,QAAQ,CAACa,MAAO;AAPnC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEV,OAAO,CAACW,WAAhC;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,EAAE,EAAC,yBADL;AAEE,UAAA,SAAS,EAAEX,OAAO,CAACY,WAFrB;AAAA,oBAIGV,QAAQ,GAAG,QAAH,GAAc;AAJzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEF,OAAO,CAACa,MADrB;AAEE,UAAA,OAAO,EAAC,yBAFV;AAGE,UAAA,EAAE,EAAC,mBAHL;AAIE,UAAA,KAAK,EAAEf,MAJT;AAKE,UAAA,QAAQ,EAAEC,YALZ;AAAA,kCAOE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,EAAhB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAWE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEC,OAAO,CAACc,GADrB;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAER,aAJX;AAAA,gCAME,QAAC,aAAD;AAAe,UAAA,SAAS,EAAEN,OAAO,CAACe;AAAlC;AAAA;AAAA;AAAA;AAAA,gBANF,EAOGb,QAAQ,GAAG,KAAH,GAAW,aAPtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CA/DD;;GAAMN,W;UACYF,S,EACCV,W,EACAW,a,EACAV,W;;;KAJbW,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow } from '../../../actions/genralState';\nimport {\n  Typography,\n  Button,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst InvoicesNav = ({ invoices, status, changeStatus }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const smScreen = useMediaQuery('(max-width:600px)');\n  const showForm = useSelector((state) => state.GlobalState.showForm);\n\n  const addNewInvoice = () => {\n    if (!showForm) {\n      dispatch(toggleFormShow());\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Typography className={classes.header} variant=\"h4\" color=\"textPrimary\">\n          Invoices\n        </Typography>\n        <Typography\n          className={classes.caption}\n          variant=\"caption\"\n          color=\"textSecondary\"\n        >\n          {smScreen\n            ? `Invoices ${invoices.length}`\n            : `There are ${invoices.length} total invoices`}\n        </Typography>\n      </div>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel\n            id=\"customized-select-label\"\n            className={classes.filterLabel}\n          >\n            {smScreen ? 'Filter' : 'Filter By Name'}\n          </InputLabel>\n          <Select\n            className={classes.select}\n            labelId=\"customized-select-label\"\n            id=\"customized-select\"\n            value={status}\n            onChange={changeStatus}\n          >\n            <MenuItem value=\"\">\n              <em>all</em>\n            </MenuItem>\n            <MenuItem value={'pending'}>pending</MenuItem>\n            <MenuItem value={'paid'}>paid</MenuItem>\n            <MenuItem value={'draft'}>Draft</MenuItem>\n          </Select>\n        </FormControl>\n        <Button\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={addNewInvoice}\n        >\n          <AddCircleIcon className={classes.icon} />\n          {smScreen ? 'New' : 'New Invoice'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default InvoicesNav;\n"]},"metadata":{},"sourceType":"module"}