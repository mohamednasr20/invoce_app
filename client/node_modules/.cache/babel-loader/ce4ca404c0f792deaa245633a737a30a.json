{"ast":null,"code":"import React from'react';import iconMoon from\"../../assets/icon-moon.svg\";import iconSun from\"../../assets/icon-sun.svg\";import logo from\"../../assets/logo.svg\";import{switchTheme}from'../../actions/genralState';import{useHistory}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{logout}from'../../actions/auth';import{Avatar,Button}from'@material-ui/core';import useStyles from'./styles';import useMediaQuery from'@material-ui/core/useMediaQuery';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Navbar=function Navbar(){var classes=useStyles();var mDScreen=useMediaQuery('(max-width:960px)');var dispatch=useDispatch();var history=useHistory();var isDarkMode=useSelector(function(state){return state.globalState.isDarkMode;});var authData=useSelector(function(state){return state.authReducer.authData;});var toggleMode=function toggleMode(){dispatch(switchTheme());};var handleLogout=function handleLogout(){dispatch(logout());history.push('/auth');};return/*#__PURE__*/_jsx(_Fragment,{children:mDScreen&&/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.logoDiv,children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\",className:classes.logo})}),/*#__PURE__*/_jsx(\"img\",{src:isDarkMode?iconSun:iconMoon,alt:\"moon\",className:classes.icons,onClick:function onClick(){return toggleMode();}}),authData&&/*#__PURE__*/_jsx(Avatar,{alt:\"avatar\",className:classes.avatar,children:authData===null||authData===void 0?void 0:authData.result.name.charAt(0)}),authData&&/*#__PURE__*/_jsx(Button,{className:classes.logout,variant:\"contained\",color:\"primary\",onClick:handleLogout,children:\"logout\"})]})});};export default Navbar;","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/NavbarSmallScreen/Navbar.js"],"names":["React","switchTheme","useHistory","useDispatch","useSelector","logout","Avatar","Button","useStyles","useMediaQuery","Navbar","classes","mDScreen","dispatch","history","isDarkMode","state","globalState","authData","authReducer","toggleMode","handleLogout","push","root","logoDiv","logo","iconSun","iconMoon","icons","avatar","result","name","charAt"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wIAIA,OAASC,WAAT,KAA4B,2BAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,MAAT,KAAuB,oBAAvB,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,mBAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,C,6IAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,GAAMI,CAAAA,QAAQ,CAAGH,aAAa,CAAC,mBAAD,CAA9B,CAEA,GAAMI,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CACA,GAAMa,CAAAA,UAAU,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAN,CAAkBF,UAA7B,EAAD,CAA9B,CACA,GAAMG,CAAAA,QAAQ,CAAGd,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACG,WAAN,CAAkBD,QAA7B,EAAD,CAA5B,CAEA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBP,QAAQ,CAACZ,WAAW,EAAZ,CAAR,CACD,CAFD,CAIA,GAAMoB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBR,QAAQ,CAACR,MAAM,EAAP,CAAR,CAEAS,OAAO,CAACQ,IAAR,CAAa,OAAb,EACD,CAJD,CAMA,mBACE,yBACGV,QAAQ,eACP,aAAK,SAAS,CAAED,OAAO,CAACY,IAAxB,wBACE,YAAK,SAAS,CAAEZ,OAAO,CAACa,OAAxB,uBACE,YAAK,GAAG,CAAEC,IAAV,CAAgB,GAAG,CAAC,MAApB,CAA2B,SAAS,CAAEd,OAAO,CAACc,IAA9C,EADF,EADF,cAIE,YACE,GAAG,CAAEV,UAAU,CAAGW,OAAH,CAAaC,QAD9B,CAEE,GAAG,CAAC,MAFN,CAGE,SAAS,CAAEhB,OAAO,CAACiB,KAHrB,CAIE,OAAO,CAAE,yBAAMR,CAAAA,UAAU,EAAhB,EAJX,EAJF,CAWGF,QAAQ,eACP,KAAC,MAAD,EAAQ,GAAG,CAAC,QAAZ,CAAqB,SAAS,CAAEP,OAAO,CAACkB,MAAxC,UACGX,QADH,SACGA,QADH,iBACGA,QAAQ,CAAEY,MAAV,CAAiBC,IAAjB,CAAsBC,MAAtB,CAA6B,CAA7B,CADH,EAZJ,CAgBGd,QAAQ,eACP,KAAC,MAAD,EACE,SAAS,CAAEP,OAAO,CAACN,MADrB,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,SAHR,CAIE,OAAO,CAAEgB,YAJX,oBAjBJ,GAFJ,EADF,CAiCD,CApDD,CAsDA,cAAeX,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport iconMoon from '../../assets/icon-moon.svg';\nimport iconSun from '../../assets/icon-sun.svg';\nimport logo from '../../assets/logo.svg';\nimport { switchTheme } from '../../actions/genralState';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport { Avatar, Button } from '@material-ui/core';\nimport useStyles from './styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst Navbar = () => {\n  const classes = useStyles();\n  const mDScreen = useMediaQuery('(max-width:960px)');\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isDarkMode = useSelector((state) => state.globalState.isDarkMode);\n  const authData = useSelector((state) => state.authReducer.authData);\n\n  const toggleMode = () => {\n    dispatch(switchTheme());\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n\n    history.push('/auth');\n  };\n\n  return (\n    <>\n      {mDScreen && (\n        <div className={classes.root}>\n          <div className={classes.logoDiv}>\n            <img src={logo} alt=\"logo\" className={classes.logo} />\n          </div>\n          <img\n            src={isDarkMode ? iconSun : iconMoon}\n            alt=\"moon\"\n            className={classes.icons}\n            onClick={() => toggleMode()}\n          />\n\n          {authData && (\n            <Avatar alt=\"avatar\" className={classes.avatar}>\n              {authData?.result.name.charAt(0)}\n            </Avatar>\n          )}\n          {authData && (\n            <Button\n              className={classes.logout}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleLogout}\n            >\n              logout\n            </Button>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}