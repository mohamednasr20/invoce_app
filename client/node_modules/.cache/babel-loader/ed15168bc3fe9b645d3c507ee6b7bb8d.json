{"ast":null,"code":"var _jsxFileName = \"/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/FormModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FormField from './FormField/FormField';\nimport { useHistory } from 'react-router-dom';\nimport ItemsList from './ItemsList/ItemsList';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/themeMode';\nimport { Container, Typography, MenuItem, Button, Paper } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from './styles';\nimport { ValidatorForm, SelectValidator } from 'react-material-ui-form-validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormModal = () => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector(state => state.GlobalState.showForm);\n  const currentId = useSelector(state => state.GlobalState.currentId);\n  const invoice = useSelector(state => currentId ? state.GlobalState.invoices.find(invoice => invoice._id === currentId) : null);\n  const data = {\n    createdAt: '',\n    paymentDue: '',\n    description: '',\n    paymentTerms: '',\n    clientName: '',\n    clientEmail: '',\n    status: 'pending',\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: ''\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: ''\n    },\n    items: [],\n    total: 0\n  };\n  const [invoiceData, setInvocieData] = useState(data);\n  const [itemError, setItemError] = useState(false);\n\n  const addItemField = () => {\n    const emptyInput = invoiceData.items.find(item => !item.name);\n\n    if (emptyInput) {\n      setItemError(true);\n      setTimeout(() => {\n        setItemError(false);\n      }, 1500);\n    } else {\n      setInvocieData({ ...invoiceData,\n        items: [...invoiceData.items, {\n          name: '',\n          quantity: 0,\n          price: 0,\n          total: 0\n        }]\n      });\n    }\n  };\n\n  const onDeleteItem = id => {\n    const newItems = invoiceData.items.filter(item => item._id !== id);\n    setInvocieData({ ...invoiceData,\n      items: newItems\n    });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n    const newItems = invoiceData.items.map((item, idx) => idx === invoiceData.items.indexOf(i) ? inputName === 'name' ? { ...item,\n      name: value\n    } : { ...item,\n      [inputName]: Number(value),\n      total: inputName === 'price' ? value * item.quantity : value * item.price\n    } : item);\n    setInvocieData({ ...invoiceData,\n      items: newItems,\n      total: newItems.map(item => Number(item.total)).reduce((acc, currentValue) => acc + currentValue)\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const getDueDate = (created, paymentTerms) => {\n    const date = new Date(created);\n    const dueDate = new Date(date.setDate(date.getDate() + paymentTerms)).toISOString().split('T')[0];\n    return dueDate;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n    if (!currentId) clear(); // eslint-disable-next-line\n  }, [currentId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: showForm ? 'block' : 'none'\n    },\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: currentId ? `Edit #${currentId.slice(18)}` : 'New Invoice'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidatorForm, {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.heading,\n              color: \"primary\",\n              children: \"Bill From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"senderAddress\",\n              vlaue: invoiceData.senderAddress.street,\n              onChange: e => setInvocieData({ ...invoiceData,\n                senderAddress: { ...invoiceData.senderAddress,\n                  street: e.target.value\n                }\n              }),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderCity\",\n                  vlaue: invoiceData.senderAddress.city,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      city: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Post Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderPostCode\",\n                  vlaue: invoiceData.senderAddress.postCode,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      postCode: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"senderCountry\",\n                  value: invoiceData.senderAddress.country,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    senderAddress: { ...invoiceData.senderAddress,\n                      country: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.heading,\n              color: \"primary\",\n              children: \"Bill to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Client's Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientName\",\n              value: invoiceData.clientName,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Client's Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientEmail\",\n              value: invoiceData.clientEmail,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientEmail: e.target.value\n              }),\n              validators: ['required', 'isEmail'],\n              errorMessages: [\"can't be empty\", 'email is invalid']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Street Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"clientStreet\",\n              value: invoiceData.clientAddress.street,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                clientAddress: { ...invoiceData.clientAddress,\n                  street: e.target.value\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientCity\",\n                  value: invoiceData.clientAddress.city,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      city: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Post Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientPostCode\",\n                  value: invoiceData.clientAddress.postCode,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      postCode: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"clientCountry\",\n                  vlaue: invoiceData.clientAddress.country,\n                  onChange: e => setInvocieData({ ...invoiceData,\n                    clientAddress: { ...invoiceData.clientAddress,\n                      country: e.target.value\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.flex,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Invoice Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  name: \"createdAt\",\n                  type: \"date\",\n                  value: invoiceData.createdAt,\n                  fullWidth: true,\n                  onChange: e => {\n                    setInvocieData({ ...invoiceData,\n                      createdAt: e.target.value,\n                      paymentDue: invoiceData.paymentTerms ? getDueDate(e.target.value, invoiceData.paymentTerms) : ''\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.label,\n                  children: \"Payment terms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(SelectValidator, {\n                    name: \"paymentTerms\",\n                    value: invoiceData.paymentTerms,\n                    validators: ['required'],\n                    errorMessages: [\"can't be empty\"],\n                    onChange: e => {\n                      setInvocieData({ ...invoiceData,\n                        paymentTerms: e.target.value,\n                        paymentDue: invoiceData.createdAt ? getDueDate(invoiceData.createdAt, e.target.value) : ''\n                      });\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: '',\n                      children: /*#__PURE__*/_jsxDEV(\"em\", {\n                        children: \"None\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 30,\n                      children: \"Next 30 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 14,\n                      children: \"Next 14 days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 7,\n                      children: \"Next 7 day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 1,\n                      children: \"Next 1 day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.label,\n              children: \"Project Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"description\",\n              value: invoiceData.description,\n              fullWidth: true,\n              onChange: e => setInvocieData({ ...invoiceData,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), invoiceData.items.length > 0 ? /*#__PURE__*/_jsxDEV(ItemsList, {\n              items: invoiceData.items,\n              handleChangeItem: handleChangeItemValue,\n              deleteItem: onDeleteItem,\n              itemError: itemError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            className: classes.btnList,\n            onClick: addItemField,\n            children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), \"Add New Item\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.btnGroup,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => dispatch(toggleFormShow()),\n              className: classes.btn,\n              children: currentId ? 'Cancel' : 'Discard'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.btnRight,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  display: currentId ? 'none' : 'inline'\n                },\n                className: classes.btn,\n                variant: \"outlined\",\n                children: \"Save As Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.btn,\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                children: currentId ? 'Save Changes' : 'Save & Add'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormModal, \"gwglEZ/7ejsy9z4c5n71l/jMWmo=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = FormModal;\nexport default FormModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormModal\");","map":{"version":3,"sources":["/Users/mohamednasr/Desktop/web/projects/invoce_app/client/src/components/Form/FormModal.js"],"names":["React","useState","useEffect","FormField","useHistory","ItemsList","createInvoice","updateInvoice","useDispatch","useSelector","toggleFormShow","handleCurrentId","Container","Typography","MenuItem","Button","Paper","AddIcon","useStyles","ValidatorForm","SelectValidator","FormModal","classes","history","dispatch","showForm","state","GlobalState","currentId","invoice","invoices","find","_id","data","createdAt","paymentDue","description","paymentTerms","clientName","clientEmail","status","senderAddress","street","city","postCode","country","clientAddress","items","total","invoiceData","setInvocieData","itemError","setItemError","addItemField","emptyInput","item","name","setTimeout","quantity","price","onDeleteItem","id","newItems","filter","handleChangeItemValue","e","i","inputName","target","value","map","idx","indexOf","Number","reduce","acc","currentValue","clear","getDueDate","created","date","Date","dueDate","setDate","getDate","toISOString","split","onSubmit","preventDefault","push","display","root","formContainer","paper","slice","heading","label","flex","space","length","btnList","btnGroup","btn","btnRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormField from './FormField/FormField';\nimport { useHistory } from 'react-router-dom';\nimport ItemsList from './ItemsList/ItemsList';\nimport { createInvoice, updateInvoice } from '../../actions/invoices';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleFormShow, handleCurrentId } from '../../actions/themeMode';\nimport {\n  Container,\n  Typography,\n  MenuItem,\n  Button,\n  Paper,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport useStyles from './styles';\nimport {\n  ValidatorForm,\n  SelectValidator,\n} from 'react-material-ui-form-validator';\n\nconst FormModal = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const showForm = useSelector((state) => state.GlobalState.showForm);\n  const currentId = useSelector((state) => state.GlobalState.currentId);\n  const invoice = useSelector((state) =>\n    currentId\n      ? state.GlobalState.invoices.find((invoice) => invoice._id === currentId)\n      : null\n  );\n\n  const data = {\n    createdAt: '',\n    paymentDue: '',\n    description: '',\n    paymentTerms: '',\n    clientName: '',\n    clientEmail: '',\n    status: 'pending',\n\n    senderAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    clientAddress: {\n      street: '',\n      city: '',\n      postCode: '',\n      country: '',\n    },\n    items: [],\n    total: 0,\n  };\n\n  const [invoiceData, setInvocieData] = useState(data);\n  const [itemError, setItemError] = useState(false);\n\n  const addItemField = () => {\n    const emptyInput = invoiceData.items.find((item) => !item.name);\n    if (emptyInput) {\n      setItemError(true);\n      setTimeout(() => {\n        setItemError(false);\n      }, 1500);\n    } else {\n      setInvocieData({\n        ...invoiceData,\n        items: [\n          ...invoiceData.items,\n          {\n            name: '',\n            quantity: 0,\n            price: 0,\n            total: 0,\n          },\n        ],\n      });\n    }\n  };\n\n  const onDeleteItem = (id) => {\n    const newItems = invoiceData.items.filter((item) => item._id !== id);\n    setInvocieData({ ...invoiceData, items: newItems });\n  };\n\n  const handleChangeItemValue = (e, i) => {\n    const inputName = e.target.name;\n    let value = e.target.value;\n\n    const newItems = invoiceData.items.map((item, idx) =>\n      idx === invoiceData.items.indexOf(i)\n        ? inputName === 'name'\n          ? { ...item, name: value }\n          : {\n              ...item,\n              [inputName]: Number(value),\n              total:\n                inputName === 'price'\n                  ? value * item.quantity\n                  : value * item.price,\n            }\n        : item\n    );\n\n    setInvocieData({\n      ...invoiceData,\n      items: newItems,\n      total: newItems\n        .map((item) => Number(item.total))\n        .reduce((acc, currentValue) => acc + currentValue),\n    });\n  };\n\n  const clear = () => {\n    dispatch(handleCurrentId(null));\n    setInvocieData(data);\n  };\n\n  const getDueDate = (created, paymentTerms) => {\n    const date = new Date(created);\n    const dueDate = new Date(date.setDate(date.getDate() + paymentTerms))\n      .toISOString()\n      .split('T')[0];\n\n    return dueDate;\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateInvoice(currentId, invoiceData));\n      dispatch(handleCurrentId(null));\n      history.push('/');\n    } else {\n      dispatch(createInvoice(invoiceData));\n    }\n\n    dispatch(toggleFormShow());\n    clear();\n  };\n\n  useEffect(() => {\n    if (invoice) setInvocieData(invoice);\n\n    if (!currentId) clear();\n\n    // eslint-disable-next-line\n  }, [currentId]);\n  return (\n    <div\n      style={{ display: showForm ? 'block' : 'none' }}\n      className={classes.root}\n    >\n      <Container className={classes.formContainer}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\">\n            {currentId ? `Edit #${currentId.slice(18)}` : 'New Invoice'}\n          </Typography>\n\n          <ValidatorForm onSubmit={onSubmit}>\n            <div>\n              <Typography\n                variant=\"h5\"\n                className={classes.heading}\n                color=\"primary\"\n              >\n                Bill From\n              </Typography>\n              <div className={classes.label}>Street Address</div>\n\n              <FormField\n                name=\"senderAddress\"\n                vlaue={invoiceData.senderAddress.street}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    senderAddress: {\n                      ...invoiceData.senderAddress,\n                      street: e.target.value,\n                    },\n                  })\n                }\n                fullWidth={true}\n              />\n\n              <div className={classes.flex}>\n                <div className={classes.space}>\n                  <div className={classes.label}>City</div>\n\n                  <FormField\n                    name=\"senderCity\"\n                    vlaue={invoiceData.senderAddress.city}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          city: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Post Code</div>\n\n                  <FormField\n                    name=\"senderPostCode\"\n                    vlaue={invoiceData.senderAddress.postCode}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          postCode: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Country</div>\n\n                  <FormField\n                    name=\"senderCountry\"\n                    value={invoiceData.senderAddress.country}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        senderAddress: {\n                          ...invoiceData.senderAddress,\n                          country: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <Typography\n                variant=\"h5\"\n                className={classes.heading}\n                color=\"primary\"\n              >\n                Bill to\n              </Typography>\n              <div className={classes.label}>Client's Name</div>\n\n              <FormField\n                name=\"clientName\"\n                value={invoiceData.clientName}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({ ...invoiceData, clientName: e.target.value })\n                }\n              />\n              <div className={classes.label}>Client's Email</div>\n\n              <FormField\n                name=\"clientEmail\"\n                value={invoiceData.clientEmail}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    clientEmail: e.target.value,\n                  })\n                }\n                validators={['required', 'isEmail']}\n                errorMessages={[\"can't be empty\", 'email is invalid']}\n              />\n              <div className={classes.label}>Street Address</div>\n\n              <FormField\n                name=\"clientStreet\"\n                value={invoiceData.clientAddress.street}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    clientAddress: {\n                      ...invoiceData.clientAddress,\n                      street: e.target.value,\n                    },\n                  })\n                }\n              />\n              <div className={classes.flex}>\n                <div className={classes.space}>\n                  <div className={classes.label}>City</div>\n\n                  <FormField\n                    name=\"clientCity\"\n                    value={invoiceData.clientAddress.city}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          city: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Post Code</div>\n\n                  <FormField\n                    name=\"clientPostCode\"\n                    value={invoiceData.clientAddress.postCode}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          postCode: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n                <div className={classes.space}>\n                  <div className={classes.label}>Country</div>\n\n                  <FormField\n                    name=\"clientCountry\"\n                    vlaue={invoiceData.clientAddress.country}\n                    onChange={(e) =>\n                      setInvocieData({\n                        ...invoiceData,\n                        clientAddress: {\n                          ...invoiceData.clientAddress,\n                          country: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </div>\n              </div>\n              <div className={classes.flex}>\n                <div>\n                  <div className={classes.label}>Invoice Date</div>\n\n                  <FormField\n                    name=\"createdAt\"\n                    type=\"date\"\n                    value={invoiceData.createdAt}\n                    fullWidth={true}\n                    onChange={(e) => {\n                      setInvocieData({\n                        ...invoiceData,\n                        createdAt: e.target.value,\n                        paymentDue: invoiceData.paymentTerms\n                          ? getDueDate(e.target.value, invoiceData.paymentTerms)\n                          : '',\n                      });\n                    }}\n                  />\n                </div>\n                <div>\n                  <div className={classes.label}>Payment terms</div>\n                  <div>\n                    <SelectValidator\n                      name=\"paymentTerms\"\n                      value={invoiceData.paymentTerms}\n                      validators={['required']}\n                      errorMessages={[\"can't be empty\"]}\n                      onChange={(e) => {\n                        setInvocieData({\n                          ...invoiceData,\n                          paymentTerms: e.target.value,\n                          paymentDue: invoiceData.createdAt\n                            ? getDueDate(invoiceData.createdAt, e.target.value)\n                            : '',\n                        });\n                      }}\n                    >\n                      <MenuItem value={''}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={30}>Next 30 days</MenuItem>\n                      <MenuItem value={14}>Next 14 days</MenuItem>\n                      <MenuItem value={7}>Next 7 day</MenuItem>\n                      <MenuItem value={1}>Next 1 day</MenuItem>\n                    </SelectValidator>\n                  </div>\n                </div>\n              </div>\n              <div className={classes.label}>Project Description</div>\n\n              <FormField\n                name=\"description\"\n                value={invoiceData.description}\n                fullWidth={true}\n                onChange={(e) =>\n                  setInvocieData({\n                    ...invoiceData,\n                    description: e.target.value,\n                  })\n                }\n              />\n              {invoiceData.items.length > 0 ? (\n                <ItemsList\n                  items={invoiceData.items}\n                  handleChangeItem={handleChangeItemValue}\n                  deleteItem={onDeleteItem}\n                  itemError={itemError}\n                />\n              ) : null}\n            </div>\n\n            <Button\n              variant=\"contained\"\n              fullWidth\n              className={classes.btnList}\n              onClick={addItemField}\n            >\n              <AddIcon />\n              Add New Item\n            </Button>\n            <div className={classes.btnGroup}>\n              <Button\n                variant=\"contained\"\n                onClick={() => dispatch(toggleFormShow())}\n                className={classes.btn}\n              >\n                {currentId ? 'Cancel' : 'Discard'}\n              </Button>\n              <div className={classes.btnRight}>\n                <Button\n                  style={{ display: currentId ? 'none' : 'inline' }}\n                  className={classes.btn}\n                  variant=\"outlined\"\n                >\n                  Save As Draft\n                </Button>\n                <Button\n                  className={classes.btn}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  {currentId ? 'Save Changes' : 'Save & Add'}\n                </Button>\n              </div>\n            </div>\n          </ValidatorForm>\n        </Paper>\n      </Container>\n    </div>\n  );\n};\n\nexport default FormModal;\n"]},"metadata":{},"sourceType":"module"}